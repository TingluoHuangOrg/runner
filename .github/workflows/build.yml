name: Runner E2E

on:
  workflow_dispatch:
  push:
    branches:
    - main
    - releases/*

jobs:
  QueueWorkflow:
    needs: [Initialize, LinuxE2E, macOSE2E, ARME2E, ARM64E2E, WindowsE2E]
    runs-on: ubuntu-latest
    steps:
    - name: GitHub Script
      uses: actions/github-script@v3
      with:
        # The script to run
        debug: true
        script: |
          var workflow = await github.actions.createWorkflowDispatch({
              owner: 'TingluoHuangOrg',
              repo: 'runner',
              workflow_id: 'runner-basic-e2e-test-case.yml',
              ref: 'main',
              inputs: {
                target_runners: '${{needs.Initialize.outputs.unique_runner_label}}'
              }
            }); 
          core.debug(JSON.stringify(workflow))
        # The GitHub token used to create an authenticated client
        github-token: ${{secrets.REPO_PAT}}
    - run: |
        curl --version
  Initialize:
    runs-on: ubuntu-latest
    outputs:
      unique_runner_label: ${{steps.generator.outputs.runner_label}}
    steps:
      - name: Generate Unique Runner label
        id: generator
        run: |
          label=$(echo $GITHUB_TOKEN | sha256sum | cut -f1 -d" ")
          echo ::set-output name=runner_label::$label
  LinuxE2E:
    needs: [build, Initialize]
    runs-on: ubuntu-latest
    steps:
      - name: Download Runner
        uses: actions/download-artifact@v2
        with:
          name: runner-package-linux-x64
      - name: Configure Runner
        run: |
          ls -l
          tar -xzf *.tar.gz
          ls -l
          ./config.sh --help
          ./config.sh --url ${{github.event.repository.html_url}} --token ${{secrets.RUNNER_REGISTER_TOKEN}} --labels linux-x64,${{needs.Initialize.outputs.unique_runner_label}} --replace
          ./run.sh --once
          ./config.sh remove --token ${{secrets.RUNNER_REGISTER_TOKEN}}
  macOSE2E:
    needs: [build, Initialize]
    runs-on: macOS-latest
    steps:
      - name: Download Runner
        uses: actions/download-artifact@v2
        with:
          name: runner-package-osx-x64
      - name: Configure Runner
        run: |
          ls -l
          tar -xzf *.tar.gz
          ls -l
          ./config.sh --help
          ./config.sh --url ${{github.event.repository.html_url}} --token ${{secrets.RUNNER_REGISTER_TOKEN}} --labels osx-x64,${{needs.Initialize.outputs.unique_runner_label}} --replace
          ./run.sh --once
          ./config.sh remove --token ${{secrets.RUNNER_REGISTER_TOKEN}}
  ARME2E:
    needs: [build, Initialize]
    runs-on: ubuntu-latest
    steps:
      - name: Download Runner
        uses: actions/download-artifact@v2
        with:
          name: runner-package-linux-arm
      
      - run: |
          ls -l
          tar -xzf *.tar.gz
          ls -l
          docker run --rm --privileged multiarch/qemu-user-static:register --reset

      - uses: docker://multiarch/ubuntu-core:armhf-bionic
        with:
          args: 'bash -c "apt-get update && apt-get install -y coreutils curl git && ./bin/installdependencies.sh && ./config.sh --help && ./config.sh --url ${{github.event.repository.html_url}} --token ${{secrets.RUNNER_REGISTER_TOKEN}} --labels linux-arm,${{needs.Initialize.outputs.unique_runner_label}} --replace && ./run.sh --once && ./config.sh remove --token ${{secrets.RUNNER_REGISTER_TOKEN}}"'
        env:
          RUNNER_ALLOW_RUNASROOT: 1

  ARM64E2E:
    needs: [build, Initialize]
    runs-on: ubuntu-latest
    steps:
      - name: Download Runner
        uses: actions/download-artifact@v2
        with:
          name: runner-package-linux-arm64
      - run: |
          ls -l
          tar -xzf *.tar.gz
          ls -l
          docker run --rm --privileged multiarch/qemu-user-static:register --reset

      - uses: docker://multiarch/ubuntu-core:arm64-bionic
        with:
          args: 'bash -c "apt-get update && apt-get install -y coreutils curl git && ./bin/installdependencies.sh && ./config.sh --help && ./config.sh --url ${{github.event.repository.html_url}} --token ${{secrets.RUNNER_REGISTER_TOKEN}} --labels linux-arm64,${{needs.Initialize.outputs.unique_runner_label}} --replace && ./run.sh --once && ./config.sh remove --token ${{secrets.RUNNER_REGISTER_TOKEN}}"'
        env:
          RUNNER_ALLOW_RUNASROOT: 1

  WindowsE2E:
    needs: [build, Initialize]
    runs-on: windows-latest
    steps:
      - name: Download Runner
        uses: actions/download-artifact@v2
        with:
          name: runner-package-win-x64
      - name: Configure Runner
        run: |
          Get-ChildItem *.zip | Expand-Archive -DestinationPath $PWD
          dir
          ./config.cmd --help
          ./config.cmd --url ${{github.event.repository.html_url}} --token ${{secrets.RUNNER_REGISTER_TOKEN}} --labels win-x64,${{needs.Initialize.outputs.unique_runner_label}} --replace
          ./run.cmd --once
          ./config.cmd remove --token ${{secrets.RUNNER_REGISTER_TOKEN}}
     
  build:
    strategy:
      matrix:
        runtime: [ linux-x64, linux-arm64, linux-arm, win-x64, osx-x64 ]
        include:
        - runtime: linux-x64
          os: ubuntu-latest
          devScript: ./dev.sh

        - runtime: linux-arm64
          os: ubuntu-latest
          devScript: ./dev.sh

        - runtime: linux-arm
          os: ubuntu-latest
          devScript: ./dev.sh

        - runtime: osx-x64
          os: macOS-latest
          devScript: ./dev.sh

        - runtime: win-x64
          os: windows-latest
          devScript: ./dev

    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v1

    # Build runner layout
    - name: Build & Layout Release
      run: |
        ${{ matrix.devScript }} layout Release ${{ matrix.runtime }}
      working-directory: src
    
    # Create runner package tar.gz/zip
    - name: Package Release
      run: |
         ${{ matrix.devScript }} package Release ${{ matrix.runtime }}
      working-directory: src

    # Upload runner package tar.gz/zip as artifact
    - name: Publish Artifact
      uses: actions/upload-artifact@v1
      with:
        name: runner-package-${{ matrix.runtime }}
        path: _package
